@{
    ViewData["Title"] = "Placement";
    Layout = "AdminLayout";
}

<!-- Modal -->
<div class="text-center">
    <h1 class="align-content-center" id="judul">List Placement</h1>
</div>
<div class="text-center my-3">
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalAddPlacement" data-bs-placement="top" data-bs-custom-class="custom-tooltip" data-bs-title="Add Placement">
        <i class='bx bx-user-plus'></i>
    </button>
</div>

<div class="add-placement">
    <div class="modal" id="modalAddPlacement" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Placement</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="mb-3">
                            <label for="startDate" class="form-label">Start Date</label>
                            <input type="datetime-local" class="form-control" onclick="" id="startDate" placeholder="StartDate">
                        </div>
                        <div class="mb-3">
                            <label for="endDate" class="form-label">End Date</label>
                            <input type="datetime-local" class="form-control" id="endDate" placeholder="EndDate" readonly>
                        </div>
                        <div class="mb-3">
                            <label for="employeeGuid" class="form-label">Employee Guid</label>
                            <input type="text" class="form-control" id="employeeGuid" placeholder="Employee Guid">
                        </div>
                        <div class="mb-3">
                            <label for="clientGuid" class="form-label">Client Guid</label>
                            <input type="text" class="form-control" id="clientGuid" placeholder="Client Guid">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="addPlacement()" class="btn btn-primary d-inline-block" data-bs-dismiss="modal">Add Placement</button>
                    <button type="button" class="btn btn-secondary d-inline-block" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="recent-orders">
    <table id="placementTable">
        <thead>
            <tr>
                <th>No</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Employee Name</th>
                <th>Client Name</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="tbodyPlacement">
        </tbody>
    </table>
</div>

<div class="modal" id="modalUpdatePlacement" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label for="guid" class="form-label">Guid</label>
                        <input type="text" class="form-control" id="guidUpd" placeholder="Guid" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="datetime-local" class="form-control" id="startDateUpd" placeholder="Start Date">
                    </div>
                    <div class="mb-3">
                        <label for="endDate" class="form-label">End Date</label>
                        <input type="datetime-local" class="form-control" id="endDateUpd" placeholder="End Date" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="employeeGuid" class="form-label">Employee Guid</label>
                        <input type="text" class="form-control" id="employeeGuidUpd" placeholder="Employee Guid">
                    </div>
                    <div class="mb-3">
                        <label for="clientGuid" class="form-label">Client Guid</label>
                        <input type="text" class="form-control" id="clientGuidUpd" placeholder="Client Guid">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="UpdatePlacement()" class="btn btn-primary d-inline-block" data-bs-dismiss="modal">Update Placement</button>
                <button type="button" class="btn btn-secondary d-inline-block" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script src="~/js/Placement.js" asp-append-version="true"></script>
        <script>
            const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="modal"]')
            const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))

            const startDateInput = document.getElementById('startDate');
            const endDateInput = document.getElementById('endDate');

            startDateInput.addEventListener('input', function () {
                const startDateValue = new Date(startDateInput.value);
                const endDateValue = new Date(startDateValue);

                // Tambahkan 1 tahun pada tanggal akhir
                endDateValue.setFullYear(endDateValue.getFullYear() + 1);

                // Format tanggal akhir ke dalam bentuk yang sesuai untuk input datetime-local
                const formattedEndDate = endDateValue.toISOString().slice(0, 16);

                // Set nilai tanggal akhir
                endDateInput.value = formattedEndDate;
            });

            $(document).ready(function () {
                loadPlacementData();
            });

            function loadPlacementData() {
                $('#placementTable').DataTable({
                    ajax: {
                        url: "https://localhost:7273/api/placements/GetEmployeeClientName",
                        dataType: "JSON",
                        dataSrc: "data"
                    },
                    columns: [
                        {
                            data: null,
                            render: function (data, type, row, meta) {
                                return meta.row + 1;
                            }
                        },
                        { data: "startDate" },
                        { data: "endDate" },
                        { data: "employeeName" },
                        { data: "clientName" },
                        {
                            data: null,
                            render: function (data, type, row) {
                            return `<button onclick="ShowUpdatePlacment('${row.guid}')" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#modalUpdatePlacement" data-bs-placement="top" title="Update Data"><i class='bx bx-edit'></i></button>` +
                                `   <button onclick="deletePlacement('${row.guid}')" class="btn btn-danger" data-bs-toggle="modal" data-bs-placement="top" title="Delete Data"><i class='bx bxs-trash-alt'></i></button>`;
                            }
                        }
                    ],
                "dom":
                    "<'row'<'col-md-5'B><'col-md-7'f>>" + // Bagian atas: Tombol - Elemen Panjang - Elemen Pencarian
                    "<'row'<'col-sm-12'tr>>" + // Tabel
                    "<'row'<'col-md-5'i><'col-md-3 mt-2 mx-auto'l><'col-md-4'p>>", // Bagian bawah: Elemen Info - Elemen Halaman
                "buttons": [
                    'copy', 'csv', 'excel', 'pdf', 'print', 'colvis'
                ],
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                "pageLength": 25
                });
            }

            function addPlacement() {
                var placementData = {
                    startDate: $("#startDate").val(),
                    endDate: $("#endDate").val(),
                    employeeGuid: $("#employeeGuid").val(),
                    clientGuid: $("#clientGuid").val(),
                };

                $.ajax({
                    url: "https://localhost:7273/api/placements",
                    type: "POST",
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    data: JSON.stringify(placementData),
                }).done(function (result) {
                    Swal.fire({
                        title: 'Success',
                        text: 'Data has been successfully inserted',
                        icon: 'success'
                    }).then(function () {
                        location.reload();
                    });
                }).fail(function (error) {
                    console.log(error)
                    Swal.fire({
                        title: 'Oops',
                        text: 'Failed to insert data. Please try again.',
                        icon: 'error'
                    });
                });
            }

            function deletePlacement(guid) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'Changes cannot be reverted!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, Delete Data'
                }).then(function (result) {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "https://localhost:7273/api/placements?guid=" + guid,
                            type: "DELETE",
                        }).done(function (result) {
                            Swal.fire({
                                title: 'Deleted',
                                text: 'Data has been successfully deleted',
                                icon: 'success'
                            }).then(function () {
                                location.reload();
                            });
                        }).fail(function (error) {
                            alert("Failed to delete data. Please try again!");
                        });
                    }
                });
            }
            function ShowUpdatePlacement(guid) {
                $.ajax({
                    url: "https://localhost:7273/api/placements/" + guid,
                    type: "GET",
                    dataType: "json"
                }).done((result) => {
                    console.log(result)
                    $("#guidUpd").val(result.data.guid);
                    $("#startDateUpd").val(result.data.startDate);
                    $("#endDateUpd").val(result.data.endDate);
                    $("#employeeGuidUpd").val(result.data.employeeGuid);
                    $("#clientGuidUpd").val(result.data.clientGuid);

                    $("#modalemp2").modal("show");
                }).fail((error) => {
                    alert("Failed to fetch placement data. Please try again.");
                    console.log(error)
                });

            }

            function UpdatePlacement() {

                let data = {
                    startDate: $("#startDateUpd").val(),
                    endDate: $("#endDateUpd").val(),
                    employeeGuid: $("#employeeGuidUpd").val(),
                    clientGuid: $("#clientGuidUpd").val(),
                };
                $.ajax({
                    url: "https://localhost:7273/api/placements",
                    type: "PUT",
                    contentType: "application/json",
                    data: JSON.stringify(data)
                }).done((result) => {
                    Swal.fire({
                        title: 'Success',
                        text: 'Data has been successfully updated',
                        icon: 'success'
                    }).then(function () {
                        location.reload();
                    });
                }).fail((error) => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Failed to insert data! Please try again.'
                    })
                    console.log(error)
                })
            }
        </script>
}

